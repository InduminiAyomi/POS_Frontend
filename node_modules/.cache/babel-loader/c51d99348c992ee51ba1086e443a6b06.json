{"ast":null,"code":"'use strict';\n\nvar _get = require('babel-runtime/helpers/get')['default'];\n\nvar _inherits = require('babel-runtime/helpers/inherits')['default'];\n\nvar _createClass = require('babel-runtime/helpers/create-class')['default'];\n\nvar _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];\n\nvar _objectWithoutProperties = require('babel-runtime/helpers/object-without-properties')['default'];\n\nvar _extends = require('babel-runtime/helpers/extends')['default'];\n\nvar _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n/*\n  This component displays a placeholder image that is hosted locally\n  while it waits for a remote image to load.\n\n  Usage: <BackgroundImage src={source} placeholder={localImage} {...other attributes}>\n        {...child components}\n       </BackgroundImage>\n*/\n\n\nvar BackgroundLoader = function (_React$Component) {\n  _inherits(BackgroundLoader, _React$Component);\n\n  _createClass(BackgroundLoader, null, [{\n    key: 'propTypes',\n    get: function get() {\n      return {\n        src: _propTypes2['default'].string.isRequired,\n        placeholder: _propTypes2['default'].string.isRequired,\n        className: _propTypes2['default'].string,\n        style: _propTypes2['default'].object,\n        children: _propTypes2['default'].node\n      };\n    }\n  }]);\n\n  function BackgroundLoader(props) {\n    _classCallCheck(this, BackgroundLoader);\n\n    _get(Object.getPrototypeOf(BackgroundLoader.prototype), 'constructor', this).call(this, props);\n\n    this.state = {\n      loaded: false,\n      error: false\n    };\n    this.handleLoad = this.handleLoad.bind(this);\n    this.handleError = this.handleError.bind(this);\n  }\n\n  _createClass(BackgroundLoader, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      // Making this a global so it can be later\n      // nullified when the component unmounts\n      this.image = new Image();\n      this.image.src = this.props.src;\n      this.image.onload = this.handleLoad;\n      this.image.onerror = this.handleError;\n    }\n  }, {\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate(nextState, nextProps) {\n      return !this.state.loaded;\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.image.onerror = null;\n      this.image.onload = null;\n      this.image = null;\n    }\n  }, {\n    key: 'handleLoad',\n    value: function handleLoad(e) {\n      this.setState({\n        loaded: true\n      });\n    }\n  }, {\n    key: 'handleError',\n    value: function handleError(e) {\n      console.error('Failed to load ', this.props.src);\n      this.setState({\n        error: true\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props;\n      var src = _props.src;\n      var placeholder = _props.placeholder;\n      var children = _props.children;\n\n      var props = _objectWithoutProperties(_props, ['src', 'placeholder', 'children']);\n\n      var source = !this.state.loaded || this.state.error ? placeholder : src;\n      return _react2['default'].createElement('div', _extends({\n        style: {\n          backgroundImage: 'url(' + source + ')'\n        }\n      }, props), children);\n    }\n  }]);\n\n  return BackgroundLoader;\n}(_react2['default'].Component);\n\nexports['default'] = BackgroundLoader;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}