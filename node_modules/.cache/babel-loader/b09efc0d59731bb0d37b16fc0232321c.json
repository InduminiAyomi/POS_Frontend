{"ast":null,"code":"import _classCallCheck from \"/home/induminid/Documents/miniproject/front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/induminid/Documents/miniproject/front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/induminid/Documents/miniproject/front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/induminid/Documents/miniproject/front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/induminid/Documents/miniproject/front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/induminid/Documents/miniproject/front-end/src/Components/OrderList.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Container, Row, Table, Badge, Button } from 'react-bootstrap';\nimport moment from 'moment';\n\nvar OrderList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(OrderList, _Component);\n\n  function OrderList() {\n    _classCallCheck(this, OrderList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(OrderList).apply(this, arguments));\n  }\n\n  _createClass(OrderList, [{\n    key: \"viewOrderDetails\",\n    // constructor(props){\n    //   super(props)\n    //   this.state = {\n    //     totalPrice: 0\n    //   }\n    //   this.calculateTotalPrice = this.calculateTotalPrice.bind(this)\n    // }\n    // componentDidMount(){\n    //   this.calculateTotalPrice(this.props.orders.items)\n    // }\n    // calculateTotalPrice(items){\n    //   var sum = 0;\n    //   items.map((item) => (\n    //       sum = sum + (item.quantity*item.id.unitPrice)\n    //   ))\n    //   this.setState({totalPrice: sum})\n    // }\n    value: function viewOrderDetails(event, orderId) {\n      this.props.history.push(\"/OrderItems/\" + orderId);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var num = 0;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Table, {\n        responsive: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Order Number\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Status\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Created Time\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }))), this.props.orders.map(function (order) {\n        return React.createElement(\"tbody\", {\n          key: order._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          style: {\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, ++num), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, order.status === \"open\" ? React.createElement(Badge, {\n          variant: \"success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, order.status) : React.createElement(Badge, {\n          variant: \"danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, order.status)), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, moment(order.createdAt).format(\"DD-MM-YYYY h:mm:ss\")), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(Button, {\n          variant: \"outline-info\",\n          onClick: function onClick(event) {\n            return _this.viewOrderDetails(event, order._id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, \"View Details\"))));\n      })))));\n    }\n  }]);\n\n  return OrderList;\n}(Component);\n\nOrderList.propTypes = {\n  orders: PropTypes.array.isRequired\n};\nexport default withRouter(OrderList);","map":{"version":3,"sources":["/home/induminid/Documents/miniproject/front-end/src/Components/OrderList.js"],"names":["React","Component","withRouter","PropTypes","Container","Row","Table","Badge","Button","moment","OrderList","event","orderId","props","history","push","num","textAlign","orders","map","order","_id","status","createdAt","format","viewOrderDetails","propTypes","array","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Container, Row, Table, Badge, Button } from 'react-bootstrap';\nimport moment from 'moment';\n\nclass OrderList extends Component {\n\n  // constructor(props){\n  //   super(props)\n\n  //   this.state = {\n  //     totalPrice: 0\n  //   }\n\n  //   this.calculateTotalPrice = this.calculateTotalPrice.bind(this)\n  // }\n\n  // componentDidMount(){\n  //   this.calculateTotalPrice(this.props.orders.items)\n  // }\n\n  // calculateTotalPrice(items){\n    \n  //   var sum = 0;\n  //   items.map((item) => (\n  //       sum = sum + (item.quantity*item.id.unitPrice)\n  //   ))\n  //   this.setState({totalPrice: sum})\n  // }\n\n  viewOrderDetails(event, orderId) {\n    this.props.history.push(\"/OrderItems/\"+orderId)\n  }\n\n\n  render() {\n\n    var num = 0\n    return (\n      <div>\n         <Container>\n          <Row>\n            <Table responsive>\n              <thead>\n                <tr>\n                  <th style={{textAlign: 'center'}}>Order Number</th>\n                  <th>Status</th>\n                  <th>Created Time</th>\n                  <th></th>\n                </tr>\n              </thead>\n\n              {this.props.orders.map((order) => (\n                <tbody key={order._id}> \n                  <tr>\n                    <td style={{textAlign: 'center'}}>{++num}</td>\n                    <td>\n                      {order.status === \"open\" ? (\n                        <Badge variant=\"success\">{order.status}</Badge>\n                          ) : (\n                        <Badge variant=\"danger\">{order.status}</Badge>\n                      )}\n                    </td>\n                    <td>{moment(order.createdAt).format(\"DD-MM-YYYY h:mm:ss\")}</td>\n                    <td><Button variant=\"outline-info\" onClick={event => this.viewOrderDetails(event, order._id)}>View Details</Button></td>\n                </tr>\n                </tbody>\n              ))}\n\n            </Table>\n          </Row>\n        </Container>\n      </div>\n    )\n  }\n\n}\n\nOrderList.propTypes = {\n  orders: PropTypes.array.isRequired\n}\n\nexport default withRouter(OrderList);\n\n\n"]},"metadata":{},"sourceType":"module"}